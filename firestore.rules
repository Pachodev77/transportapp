rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users can read public profiles of other users
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // Drivers and passengers can manage their trips
    match /trips/{tripId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.driverId == request.auth.uid;
      allow update: if isAuthenticated() && (request.auth.uid == resource.data.driverId || request.auth.uid == resource.data.passengerId);
      allow delete: if isAuthenticated() && request.auth.uid == resource.data.driverId;
    }

    // Passengers can create ride requests, drivers can see them
    match /rideRequests/{requestId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.passengerId == request.auth.uid;
      allow update: if isAuthenticated() && (request.auth.uid == resource.data.passengerId || request.auth.uid == resource.data.driverId);
      allow delete: if isAuthenticated() && request.auth.uid == resource.data.passengerId;
    }

    // Bookings can be managed by the passenger or driver
    match /bookings/{bookingId} {
      allow read: if isAuthenticated() && (request.auth.uid == resource.data.passengerId || request.auth.uid == resource.data.driverId);
      allow create: if isAuthenticated() && request.resource.data.passengerId == request.auth.uid;
      allow update: if isAuthenticated() && (request.auth.uid == resource.data.passengerId || request.auth.uid == resource.data.driverId);
      allow delete: if isAuthenticated() && request.auth.uid == resource.data.passengerId;
    }

    // Locations can be updated by the owner, and read by authenticated users (for now)
    match /locations/{userId} {
      allow read: if isAuthenticated(); // This is still not ideal, but it will make the app work for now.
      allow write: if isOwner(userId);
    }
  }
}